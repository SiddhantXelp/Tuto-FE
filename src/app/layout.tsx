// import '../styles/globals.css';

// import type { Metadata } from 'next';
// import { Inter } from 'next/font/google';

// import Header from '@/components/header';
// import HeaderMobile from '@/components/header-mobile';
// import MarginWidthWrapper from '@/components/margin-width-wrapper';
// import PageWrapper from '@/components/page-wrapper';
// import SideNav from '@/components/side-nav';
// import GoogleSignInButton from '../common/GoogleSignInButton';
// import { GoogleOAuthProvider } from '@react-oauth/google';

// const inter = Inter({ subsets: ['latin'] });

// export const metadata: Metadata = {
//   title: 'Side Nav w/ Sub Menu',
//   description: 'Generated by create next app',
// };

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <html lang="en">
//       <body className={`bg-white ${inter.className}`}>
//         <div className="flex">
//           <SideNav />
//           <main className="flex-1">
//             <MarginWidthWrapper>
//               <Header />
//               <HeaderMobile />
//               <PageWrapper>{children}</PageWrapper>
//             </MarginWidthWrapper>
//           </main>
//         </div>

//       </body>
//     </html>
//   );
// }
// src/app/layout.tsx
'use client';

import React, { useState, useEffect } from 'react';
import { Inter } from 'next/font/google';
import Header from '@/components/header';
import HeaderMobile from '@/components/header-mobile';
import MarginWidthWrapper from '@/components/margin-width-wrapper';
import PageWrapper from '@/components/page-wrapper';
import SideNav from '@/components/side-nav';
import { GoogleOAuthProvider } from '@react-oauth/google';
import '../styles/globals.css';
import Login from '../app/auth/Login/page';
import { metadata } from './metadata';
import { useRouter } from 'next/navigation';

const inter = Inter({ subsets: ['latin'] });

const RootLayout = ({ children }: { children: React.ReactNode }) => {
  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);
  const router = useRouter();

  useEffect(() => {

    const storedUserInfo = localStorage.getItem('userInfo');
    setIsLoggedIn(!!storedUserInfo);

  }, []);

  const handleLoginSuccess = () => {
    setIsLoggedIn(true);
    router.push('/');
  };


  return (
    <html lang="en">
      <head>
        <title>{metadata.title}</title>
        <meta name="description" content={metadata.description} />
      </head>
      <body className={`bg-white ${inter.className}`}>
        <GoogleOAuthProvider clientId="1020761794196-ljge7kn6ircqd3ai4jmon6uamgog9nh9.apps.googleusercontent.com">

          {isLoggedIn ? (
            <AuthenticatedLayout>{children}</AuthenticatedLayout>
          ) : (
            <UnauthenticatedLayout onLoginSuccess={handleLoginSuccess} />
          )}
        </GoogleOAuthProvider>

      </body>
    </html>
  );
};

const AuthenticatedLayout = ({ children }: { children: React.ReactNode }) => (
  <div className="flex">
    <SideNav />
    <main className="flex-1">
      <MarginWidthWrapper>
        <Header />
        <HeaderMobile />
        <PageWrapper>{children}</PageWrapper>
      </MarginWidthWrapper>
    </main>
  </div>
);

const UnauthenticatedLayout = ({ onLoginSuccess }: { onLoginSuccess: () => void }) => (
  <div>
    <Login onLoginSuccess={onLoginSuccess} />
  </div>
);

export default RootLayout;
